{"version":3,"sources":["utils/interact.js","utils/constants.js","components/Identicon.jsx","components/ConnectButton.jsx","components/AccountPopover.jsx","components/Layout.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["require","config","web3","createAlchemyWeb3","process","contractABI","contractAddress","mintNFT","a","eth","Contract","window","contract","transactionParameters","from","ethereum","selectedAddress","to","gas","gasPrice","value","data","methods","encodeABI","request","method","params","txHash","success","status","inline","weight","target","href","title","color","message","getTokenSupply","totalSupply","call","err","res","console","log","supply","PARTICLE_PARAMS","particles","number","limit","density","enable","value_area","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","backgroundMask","cover","r","g","b","retina_detect","fps_limit","StyledIdenticon","styled","div","Identicon","ref","useRef","account","useEthers","useEffect","current","innerHTML","appendChild","Jazzicon","parseInt","slice","ConnectButton","handlePopoverOpen","activateBrowserWallet","etherBalance","useEtherBalance","display","alignItems","background","borderRadius","py","px","gridGap","fontSize","fontWeight","parseFloat","formatEther","toFixed","bg","border","_hover","borderStyle","borderColor","backgroundColor","m","onClick","mr","length","AccountPopover","isPopoverOpen","onPopoverClose","deactivate","initialFocusRef","toast","useToast","isOpen","onClose","pe","pt","pb","mb","justifyContent","variant","textDecoration","mt","lineHeight","ml","alignContent","text","render","rounding","padding","duration","Copy","isExternal","ExternalLink","Layout","useState","setIsPopoverOpen","setSupply","onAccountChange","useCallback","on","accounts","align","isClosable","fetchTokenSupply","onMintPressed","className","Item","flex","paddingX","paddingY","gap","disabled","id","onChange","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","DAppProvider","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86931904.chunk.js","sourcesContent":["import React, { Link, Text } from 'gestalt'\n\nrequire('dotenv').config()\nconst alchemyKey = process.env.REACT_APP_ALCHEMY_KEY\nconst { createAlchemyWeb3 } = require('@alch/alchemy-web3')\nconst web3 = createAlchemyWeb3(alchemyKey)\n\nconst contractABI = require('../utils/contract-abi.json')\nconst contractAddress = '0x94463B828225c8Aca905dC26207d2a8dAB6d3090'\n\n//0.1 Ether\nconst price = '0x2386F26FC10000'\n//3000000 Gwei (0.003 Ether)\nconst gasLimit = '0x2DC6C0'\n\nexport const connectWallet = async () => {\n\tif (window.ethereum) {\n\t\ttry {\n\t\t\tconst addressArray = await window.ethereum.request({\n\t\t\t\tmethod: 'eth_requestAccounts',\n\t\t\t})\n\t\t\tconst obj = {\n\t\t\t\tstatus: '👆🏽 Write a message in the text-field above.',\n\t\t\t\taddress: addressArray[0],\n\t\t\t}\n\t\t\treturn obj\n\t\t} catch (err) {\n\t\t\treturn {\n\t\t\t\taddress: '',\n\t\t\t\tstatus: '😥 ' + err.message,\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\taddress: '',\n\t\t\tstatus: (\n\t\t\t\t<span>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t🦊{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\thref={`https://metamask.io/download.html`}\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tYou must install Metamask, a virtual Ethereum wallet, in your\n\t\t\t\t\t\t\tbrowser.\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</span>\n\t\t\t),\n\t\t}\n\t}\n}\n\nexport const getCurrentWalletConnected = async () => {\n\tif (window.ethereum) {\n\t\ttry {\n\t\t\tconst addressArray = await window.ethereum.request({\n\t\t\t\tmethod: 'eth_accounts',\n\t\t\t})\n\t\t\tif (addressArray.length > 0) {\n\t\t\t\treturn {\n\t\t\t\t\taddress: addressArray[0],\n\t\t\t\t\tstatus: '🦊 Wallet connected.',\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\taddress: '',\n\t\t\t\t\tstatus: '🦊 Connect to Metamask using the top right button.',\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (err) {\n\t\t\treturn {\n\t\t\t\taddress: '',\n\t\t\t\tstatus: '😥 ' + err.message,\n\t\t\t}\n\t\t}\n\t} else {\n\t\treturn {\n\t\t\taddress: '',\n\t\t\tstatus: (\n\t\t\t\t<span>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t🦊{' '}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\thref={`https://metamask.io/download.html`}\n\t\t\t\t\t\t\trel=\"noreferrer\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tYou must install Metamask, a virtual Ethereum wallet, in your\n\t\t\t\t\t\t\tbrowser.\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p>\n\t\t\t\t</span>\n\t\t\t),\n\t\t}\n\t}\n}\n\nexport const mintNFT = async () => {\n\t//error handling\n\twindow.contract = await new web3.eth.Contract(contractABI, contractAddress)\n\n\t//set up Ethereum transaction\n\t//gasPrice denomination gwei\n\tconst transactionParameters = {\n\t\tfrom: window.ethereum.selectedAddress,\n\t\tto: contractAddress,\n\t\tgas: gasLimit,\n\t\tgasPrice: '0x3B9ACA00',\n\t\tvalue: price,\n\t\tdata: window.contract.methods.mintNFT(1).encodeABI(),\n\t}\n\t//sign the transaction via Metamask\n\ttry {\n\t\tconst txHash = await window.ethereum.request({\n\t\t\tmethod: 'eth_sendTransaction',\n\t\t\tparams: [transactionParameters],\n\t\t})\n\t\treturn {\n\t\t\tsuccess: true,\n\t\t\tstatus: (\n\t\t\t\t<>\n\t\t\t\t\tCheck out your{' '}\n\t\t\t\t\t<Text inline weight=\"bold\">\n\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\tweight=\"bold\"\n\t\t\t\t\t\t\tinline\n\t\t\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\t\t\thref={`https://ropsten.etherscan.io/tx/${txHash}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\ttransaction\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Text>{' '}\n\t\t\t\t\ton Etherscan.\n\t\t\t\t</>\n\t\t\t),\n\t\t\ttitle: 'Your token was minted!',\n\t\t}\n\t} catch (error) {\n\t\treturn {\n\t\t\tsuccess: false,\n\t\t\tstatus: <Text color=\"white\">{error.message}</Text>,\n\t\t\ttitle: 'Something went wrong',\n\t\t}\n\t}\n}\n\nexport const getTokenSupply = async () => {\n\tconst contract = await new web3.eth.Contract(contractABI, contractAddress)\n\n\tconst supply = await contract.methods.totalSupply().call(function (err, res) {\n\t\tif (err) {\n\t\t\tconsole.log('An error occured: ', err)\n\t\t\treturn 0\n\t\t}\n\t\treturn res\n\t})\n\n\treturn supply\n}\n","const PARTICLE_PARAMS = {\n\tparticles: {\n\t\tnumber: {\n\t\t\tvalue: 100,\n\t\t\tlimit: 150,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 800,\n\t\t\t},\n\t\t},\n\t\tcolor: {\n\t\t\tvalue: '#ffffff',\n\t\t},\n\t\tshape: {\n\t\t\ttype: 'line',\n\t\t\tstroke: {\n\t\t\t\twidth: 0,\n\t\t\t\tcolor: '#ffffff',\n\t\t\t},\n\t\t\tpolygon: {\n\t\t\t\tnb_sides: 5,\n\t\t\t},\n\t\t\timage: {\n\t\t\t\tsrc: 'images/github.svg',\n\t\t\t\twidth: 100,\n\t\t\t\theight: 100,\n\t\t\t},\n\t\t},\n\t\topacity: {\n\t\t\tvalue: 0.5,\n\t\t\trandom: true,\n\t\t\tanim: {\n\t\t\t\tenable: true,\n\t\t\t\tspeed: 1,\n\t\t\t\topacity_min: 0.5,\n\t\t\t\tsync: false,\n\t\t\t},\n\t\t},\n\t\tsize: {\n\t\t\tvalue: 30,\n\t\t\trandom: true,\n\t\t\tanim: {\n\t\t\t\tenable: true,\n\t\t\t\tspeed: 10,\n\t\t\t\tsize_min: 10,\n\t\t\t\tsync: false,\n\t\t\t},\n\t\t},\n\t\tline_linked: {\n\t\t\tenable: true,\n\t\t\tdistance: 100,\n\t\t\tcolor: '#ffffff',\n\t\t\topacity: 1,\n\t\t\twidth: 1,\n\t\t},\n\t\tmove: {\n\t\t\tenable: true,\n\t\t\tspeed: 3,\n\t\t\tdirection: 'none',\n\t\t\trandom: false,\n\t\t\tstraight: false,\n\t\t\tout_mode: 'out',\n\t\t\tbounce: false,\n\t\t\tattract: {\n\t\t\t\tenable: false,\n\t\t\t\trotateX: 600,\n\t\t\t\trotateY: 1200,\n\t\t\t},\n\t\t},\n\t},\n\tbackgroundMask: {\n\t\tenable: true,\n\t\tcover: {\n\t\t\tcolor: {\n\t\t\t\tvalue: {\n\t\t\t\t\tr: 26,\n\t\t\t\t\tg: 16,\n\t\t\t\t\tb: 28,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t},\n\tretina_detect: true,\n\tfps_limit: 60,\n}\n\nexport default PARTICLE_PARAMS\n","import React, { useEffect, useRef } from 'react'\nimport { useEthers } from '@usedapp/core'\nimport styled from '@emotion/styled'\nimport Jazzicon from '@metamask/jazzicon'\n\nconst StyledIdenticon = styled.div`\n\theight: 1rem;\n\twidth: 1rem;\n\tborder-radius: 1.125rem;\n\tbackground-color: black;\n`\n\nexport default function Identicon() {\n\tconst ref = useRef()\n\tconst { account } = useEthers()\n\n\tuseEffect(() => {\n\t\tif (account && ref.current) {\n\t\t\tref.current.innerHTML = ''\n\t\t\tref.current.appendChild(Jazzicon(16, parseInt(account.slice(2, 10), 16)))\n\t\t}\n\t}, [account])\n\n\treturn <StyledIdenticon ref={ref} />\n}\n","import React, { Button, Box, Text } from '@chakra-ui/react'\nimport { useEthers, useEtherBalance } from '@usedapp/core'\nimport { formatEther } from '@ethersproject/units'\nimport Identicon from './Identicon'\n\nexport default function ConnectButton({ handlePopoverOpen }) {\n\tconst { activateBrowserWallet, account } = useEthers()\n\tconst etherBalance = useEtherBalance(account)\n\n\tconst handleConnectWallet = () => {\n\t\tactivateBrowserWallet()\n\t}\n\n\treturn account ? (\n\t\t<Box\n\t\t\tdisplay=\"flex\"\n\t\t\talignItems=\"center\"\n\t\t\tbackground=\"gray.700\"\n\t\t\tborderRadius=\"xl\"\n\t\t\tpy=\"0\"\n\t\t>\n\t\t\t<Box display=\"flex\" alignItems=\"center\" px=\"2\" gridGap={2}>\n\t\t\t\t<Text color=\"white\" fontSize=\"md\" fontWeight={800}>\n\t\t\t\t\tbal\n\t\t\t\t</Text>\n\t\t\t\t<Text color=\"white\" fontSize=\"md\">\n\t\t\t\t\t{etherBalance && parseFloat(formatEther(etherBalance)).toFixed(3)} ETH\n\t\t\t\t</Text>\n\t\t\t</Box>\n\t\t\t<Button\n\t\t\t\tbg=\"gray.800\"\n\t\t\t\tborder=\"1px solid transparent\"\n\t\t\t\t_hover={{\n\t\t\t\t\tborder: '1px',\n\t\t\t\t\tborderStyle: 'solid',\n\t\t\t\t\tborderColor: 'blue.400',\n\t\t\t\t\tbackgroundColor: 'gray.700',\n\t\t\t\t}}\n\t\t\t\tborderRadius=\"xl\"\n\t\t\t\tm=\"1px\"\n\t\t\t\tpx={3}\n\t\t\t\theight=\"38px\"\n\t\t\t\tonClick={handlePopoverOpen}\n\t\t\t>\n\t\t\t\t<Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\n\t\t\t\t\t{account &&\n\t\t\t\t\t\t`${account.slice(0, 6)}...${account.slice(\n\t\t\t\t\t\t\taccount.length - 4,\n\t\t\t\t\t\t\taccount.length,\n\t\t\t\t\t\t)}`}\n\t\t\t\t</Text>\n\t\t\t\t<Identicon />\n\t\t\t</Button>\n\t\t</Box>\n\t) : (\n\t\t<Button onClick={handleConnectWallet}>Connect to a wallet</Button>\n\t)\n}\n","import React, { useRef } from 'react'\nimport { Box as GestaltBox, Heading } from 'gestalt'\nimport {\n\tBox,\n\tButton,\n\tFlex,\n\tLink,\n\tPopover,\n\tPopoverContent,\n\tPopoverHeader,\n\tPopoverBody,\n\tPopoverCloseButton,\n\tPopoverTrigger,\n\tPopoverArrow,\n\tText,\n\tuseToast,\n} from '@chakra-ui/react'\nimport { ExternalLinkIcon, CopyIcon } from '@chakra-ui/icons'\nimport { useEthers } from '@usedapp/core'\nimport Identicon from './Identicon'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\n\nexport default function AccountPopover({ isPopoverOpen, onPopoverClose }) {\n\tconst { account, deactivate } = useEthers()\n\tconst initialFocusRef = useRef()\n\tconst toast = useToast()\n\n\tconst handleDeactivateAccount = () => {\n\t\tdeactivate()\n\t}\n\n\treturn (\n\t\t<Popover\n\t\t\tisOpen={isPopoverOpen}\n\t\t\tonClose={onPopoverClose}\n\t\t\tinitialFocusRef={initialFocusRef}\n\t\t>\n\t\t\t<PopoverTrigger>\n\t\t\t\t<Box pe=\"10\"></Box>\n\t\t\t</PopoverTrigger>\n\t\t\t<PopoverContent\n\t\t\t\tbackground=\"gray.900\"\n\t\t\t\tborder=\"1px\"\n\t\t\t\tborderStyle=\"solid\"\n\t\t\t\tborderColor=\"gray.700\"\n\t\t\t\tborderRadius=\"3xl\"\n\t\t\t\twidth=\"500\"\n\t\t\t>\n\t\t\t\t<PopoverHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\n\t\t\t\t\tAccount\n\t\t\t\t</PopoverHeader>\n\t\t\t\t<PopoverArrow />\n\t\t\t\t<PopoverCloseButton\n\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t_hover={{\n\t\t\t\t\t\tcolor: 'whiteAlpha.700',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<PopoverBody pt={4} px={4}>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tborderRadius=\"3xl\"\n\t\t\t\t\t\tborder=\"1px\"\n\t\t\t\t\t\tborderStyle=\"solid\"\n\t\t\t\t\t\tborderColor=\"gray.600\"\n\t\t\t\t\t\tpx={5}\n\t\t\t\t\t\tpt={4}\n\t\t\t\t\t\tpb={2}\n\t\t\t\t\t\tmb={3}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\n\t\t\t\t\t\t\t<Text color=\"gray.400\" fontSize=\"sm\">\n\t\t\t\t\t\t\t\tConnected with MetaMask\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"outline\"\n\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\tborderColor=\"blue.800\"\n\t\t\t\t\t\t\t\tborderRadius=\"3xl\"\n\t\t\t\t\t\t\t\tcolor=\"blue.500\"\n\t\t\t\t\t\t\t\tfontSize=\"13px\"\n\t\t\t\t\t\t\t\tfontWeight=\"normal\"\n\t\t\t\t\t\t\t\tpx={2}\n\t\t\t\t\t\t\t\theight=\"26px\"\n\t\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\t\tbackground: 'none',\n\t\t\t\t\t\t\t\t\tborderColor: 'blue.300',\n\t\t\t\t\t\t\t\t\ttextDecoration: 'underline',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClick={handleDeactivateAccount}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tChange\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t<Flex\n\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\tmt={2}\n\t\t\t\t\t\t\tmb={4}\n\t\t\t\t\t\t\tlineHeight={1}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Identicon />\n\t\t\t\t\t\t\t<Text\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\tfontSize=\"xl\"\n\t\t\t\t\t\t\t\tfontWeight=\"semibold\"\n\t\t\t\t\t\t\t\tml=\"2\"\n\t\t\t\t\t\t\t\tlineHeight=\"1.1\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{account &&\n\t\t\t\t\t\t\t\t\t`${account.slice(0, 6)}...${account.slice(\n\t\t\t\t\t\t\t\t\t\taccount.length - 4,\n\t\t\t\t\t\t\t\t\t\taccount.length,\n\t\t\t\t\t\t\t\t\t)}`}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t\t<Flex alignContent=\"center\" m={3}>\n\t\t\t\t\t\t\t<CopyToClipboard text={account}>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"link\"\n\t\t\t\t\t\t\t\t\tcolor=\"gray.400\"\n\t\t\t\t\t\t\t\t\tfontWeight=\"normal\"\n\t\t\t\t\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\t\t\ttextDecoration: 'none',\n\t\t\t\t\t\t\t\t\t\tcolor: 'whiteAlpha.800',\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\ttoast({\n\t\t\t\t\t\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t\t\t\t\t\t<GestaltBox\n\t\t\t\t\t\t\t\t\t\t\t\t\trounding=\"pill\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpadding={6}\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Heading size=\"sm\" color=\"white\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tAccount copied\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Heading>\n\t\t\t\t\t\t\t\t\t\t\t\t</GestaltBox>\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<CopyIcon mr={1} />\n\t\t\t\t\t\t\t\t\tCopy Address\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\tfontSize=\"sm\"\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\t\talignItems=\"center\"\n\t\t\t\t\t\t\t\thref={`https://ropsten.etherscan.io/address/${account}`}\n\t\t\t\t\t\t\t\tisExternal\n\t\t\t\t\t\t\t\tcolor=\"gray.400\"\n\t\t\t\t\t\t\t\tml={6}\n\t\t\t\t\t\t\t\t_hover={{\n\t\t\t\t\t\t\t\t\tcolor: 'whiteAlpha.800',\n\t\t\t\t\t\t\t\t\ttextDecoration: 'underline',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ExternalLinkIcon mr={1} />\n\t\t\t\t\t\t\t\tView on Explorer\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</Box>\n\t\t\t\t</PopoverBody>\n\t\t\t</PopoverContent>\n\t\t</Popover>\n\t)\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { Box, Button, Flex, Heading, Text, TextField } from 'gestalt'\nimport Particles from 'react-particles-js'\nimport { mintNFT, getTokenSupply } from 'utils/interact'\nimport PARTICLE_PARAMS from 'utils/constants'\nimport ConnectButton from './ConnectButton'\nimport AccountPopover from './AccountPopover'\nimport { useToast } from '@chakra-ui/react'\n\nconst Layout = () => {\n\tconst [value] = useState(1)\n\tconst [isPopoverOpen, setIsPopoverOpen] = useState(false)\n\tconst toast = useToast()\n\n\tconst handlePopoverClose = () => setIsPopoverOpen(false)\n\tconst handlePopoverOpen = () => setIsPopoverOpen(true)\n\tconst [supply, setSupply] = useState('')\n\n\tconst onAccountChange = useCallback(() => {\n\t\tif (window.ethereum) {\n\t\t\twindow.ethereum.on('accountsChanged', (accounts) => {\n\t\t\t\tif (accounts.length > 0) {\n\t\t\t\t\ttoast({\n\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\trounding=\"pill\"\n\t\t\t\t\t\t\t\tpadding={6}\n\t\t\t\t\t\t\t\tcolor=\"white\"\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text align=\"center\" weight=\"bold\" color=\"green\">\n\t\t\t\t\t\t\t\t\tConnected\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tisClosable: true,\n\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('....')\n\t\t\t\t\ttoast({\n\t\t\t\t\t\trender: () => (\n\t\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\t\trounding=\"pill\"\n\t\t\t\t\t\t\t\tpadding={6}\n\t\t\t\t\t\t\t\tcolor=\"orange\"\n\t\t\t\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\t\t\t\tdirection=\"column\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Text align=\"center\" weight=\"bold\" color=\"white\">\n\t\t\t\t\t\t\t\t\tConnection Issues\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t<Text align=\"center\">Metamask not installed</Text>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t),\n\t\t\t\t\t\tisClosable: true,\n\t\t\t\t\t\tduration: 3000,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}, [toast])\n\n\tuseEffect(() => {\n\t\tonAccountChange()\n\t\tconst fetchTokenSupply = async () => {\n\t\t\tsetSupply(await getTokenSupply())\n\t\t}\n\t\tfetchTokenSupply()\n\t}, [onAccountChange])\n\n\tconst onMintPressed = async () => {\n\t\tconst { status, success, title } = await mintNFT()\n\t\ttoast({\n\t\t\trender: () => (\n\t\t\t\t<Box\n\t\t\t\t\trounding=\"pill\"\n\t\t\t\t\tpadding={6}\n\t\t\t\t\tcolor={success ? 'white' : 'red'}\n\t\t\t\t\tdisplay=\"flex\"\n\t\t\t\t\tjustifyContent=\"center\"\n\t\t\t\t\tdirection=\"column\"\n\t\t\t\t>\n\t\t\t\t\t<Text\n\t\t\t\t\t\talign=\"center\"\n\t\t\t\t\t\tweight=\"bold\"\n\t\t\t\t\t\tcolor={success ? 'green' : 'white'}\n\t\t\t\t\t>\n\t\t\t\t\t\t{title}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Text align=\"center\">{status}</Text>\n\t\t\t\t</Box>\n\t\t\t),\n\t\t\tisClosable: true,\n\t\t\tduration: 30000,\n\t\t})\n\t}\n\n\tconst noop = () => {}\n\n\treturn (\n\t\t<>\n\t\t\t<Box className=\"Layout\" padding={4}>\n\t\t\t\t<Flex justifyContent=\"end\">\n\t\t\t\t\t<Flex.Item>\n\t\t\t\t\t\t<Heading color=\"lightGray\">project name</Heading>\n\t\t\t\t\t</Flex.Item>\n\t\t\t\t\t<Flex.Item flex=\"grow\" />\n\t\t\t\t\t<Flex.Item>\n\t\t\t\t\t\t<Box paddingX={10}>\n\t\t\t\t\t\t\t<ConnectButton handlePopoverOpen={handlePopoverOpen} />\n\t\t\t\t\t\t\t<AccountPopover\n\t\t\t\t\t\t\t\tisPopoverOpen={isPopoverOpen}\n\t\t\t\t\t\t\t\tonPopoverClose={handlePopoverClose}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Flex.Item>\n\t\t\t\t</Flex>\n\t\t\t\t<Box paddingY={4}>\n\t\t\t\t\t<Flex gap={4} justifyContent=\"center\" alignItems=\"start\">\n\t\t\t\t\t\t<Heading size=\"lg\" color=\"orchid\">\n\t\t\t\t\t\t\tsupply:\n\t\t\t\t\t\t\t{' ' + supply}\n\t\t\t\t\t\t</Heading>\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t\t<Box paddingY={4}>\n\t\t\t\t\t<Flex gap={4} justifyContent=\"center\" alignItems=\"start\">\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tid=\"amountToMintTextField\"\n\t\t\t\t\t\t\tonChange={noop}\n\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tid=\"mintButton\"\n\t\t\t\t\t\t\tcolor=\"gray\"\n\t\t\t\t\t\t\tonClick={onMintPressed}\n\t\t\t\t\t\t\ttext=\"Mint NFT\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Particles params={PARTICLE_PARAMS} />\n\t\t</>\n\t)\n}\n\nexport default Layout\n","import React from 'react'\nimport './App.css'\nimport 'gestalt/dist/gestalt.css'\nimport Layout from './components/Layout'\nimport { ChakraProvider } from '@chakra-ui/react'\n\nfunction App() {\n\treturn (\n\t\t<ChakraProvider>\n\t\t\t<div className=\"App\">\n\t\t\t\t<Layout />\n\t\t\t</div>\n\t\t</ChakraProvider>\n\t)\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport { DAppProvider } from '@usedapp/core'\n\nReactDOM.render(\n\t<DAppProvider config={{}}>\n\t\t<React.StrictMode>\n\t\t\t<App />\n\t\t</React.StrictMode>\n\t</DAppProvider>,\n\tdocument.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}